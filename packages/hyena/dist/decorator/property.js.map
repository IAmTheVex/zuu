{"version":3,"file":"property.js","sourceRoot":"","sources":["../../src/decorator/property.ts"],"names":[],"mappings":"AAAA,OAAO,EAAe,iBAAiB,EAAE,UAAU,EAAE,MAAM,EAAqB,MAAM,aAAa,CAAC;AACpG,OAAO,EAAE,aAAa,EAAE,MAAM,QAAQ,CAAC;AAKtC,CAAC;AAEF,MAAM,4BAA6B,SAAQ,iBAAqC;IAC5E;QACI,KAAK,CAAC,UAAU,CAAC,QAAQ,EAAE,2BAA2B,CAAC,CAAC;IAC5D,CAAC;IAEM,QAAQ,CAAC,QAA4B,EAAE,MAAW,EAAE,GAAY;QACnE,IAAI,UAAU,GAAsB,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;QAC5E,IAAI,IAAI,GAAuB,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,CAAC;QAChD,IAAI,IAAI,GAAG,IAAI,CAAC;QAEhB,IAAG,QAAQ,CAAC,IAAI;YAAE,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;aAClC,IAAG,UAAU,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,IAAI;YAAE,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC;QAE7E,IAAG,CAAC,CAAC,IAAI,EAAE;YACP,IAAG,IAAI,IAAI,QAAQ,IAAI,IAAI,IAAI,KAAK;gBAAE,IAAI,GAAG,CAAC,CAAS,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;iBACnE,IAAG,IAAI,IAAI,OAAO;gBAAE,IAAI,GAAG,CAAC,CAAS,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;iBACxD,IAAG,IAAI,IAAI,MAAM;gBAAE,IAAI,GAAG,CAAC,CAAS,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SAC/D;QAED,IAAI,IAAI,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC;QAC9B,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,WAAW,EAAE,GAAG,EAAE;YAC3C,GAAG;gBACC,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;YACzC,CAAC;YACD,GAAG,CAAC,KAAK;gBACL,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACtB,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YACnC,CAAC;SACJ,CAAC,CAAC;QAEH,IAAG,QAAQ,CAAC,KAAK,EAAC;YACd,IAAI,IAAI,GAAG,OAAO,CAAC,WAAW,CAAC,kBAAkB,EAAE,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAC7E,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC;YACzB,OAAO,CAAC,cAAc,CAAC,kBAAkB,EAAE,IAAI,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;SACxE;QAED,OAAO,MAAM,CAAC,wBAAwB,CAAC,MAAM,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;IACpE,CAAC;CACJ;AAED,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAC,QAAiB,IAAI,EAAE,IAA0C,EAAE,EAAE;IAC1F,IAAG,CAAC,IAAI;QAAE,IAAI,GAAG,SAAS,CAAC;IAC3B,IAAI,OAAO,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;IAC9B,OAAO,MAAM,CAAC,SAAS,CAAwC,IAAI,qBAAqB,CAAC,CAAC,OAAO,CAAC,CAAC;AACvG,CAAC,CAAC","sourcesContent":["import { IDecoration, AbstractDecorator, MirrorType, Mirror, ReflectedProperty } from '@zuu/mirror';\nimport { camelToDashes } from './util';\n\nexport interface PropertyParameters extends IDecoration {\n    type?: String,\n    watch?: boolean\n};\n\nexport class PropertyBindDecorator extends AbstractDecorator<PropertyParameters> {\n    constructor() {\n        super(MirrorType.PROPERTY, \"hyena.decorators.property\");\n    }\n\n    public annotate(instance: PropertyParameters, target: any, key?: string) {\n        let reflection: ReflectedProperty = Mirror.reflect(target.constructor, key);\n        let cast: (s: string) => any = (s: string) => s;\n        let type = null;\n\n        if(instance.type) type = instance.type;\n        else if(reflection.type && reflection.type.name) type = reflection.type.name;\n        \n        if(!!type) {\n            if(type == \"Number\" || type == \"Int\") cast = (s: string) => parseInt(s);\n            else if(type == \"Float\") cast = (s: string) => parseFloat(s);\n            else if(type == \"JSON\") cast = (s: string) => JSON.parse(s);\n        }\n\n        let name = camelToDashes(key);\n        Object.defineProperty(target.constructor, key, {\n            get() {\n                return cast(this.getAttribute(name));\n            },\n            set(value) {\n                console.log(\"hello!\");\n                this.setAttribute(name, value);\n            }\n        });\n\n        if(instance.watch){\n            let keys = Reflect.getMetadata(\"hyena:properties\", target.constructor) || [];\n            keys.push({ name, key });\n            Reflect.defineMetadata(\"hyena:properties\", keys, target.constructor);    \n        }\n        \n        return Object.getOwnPropertyDescriptor(target.constructor, key);\n    }\n}\n\nexport const Property = (watch: boolean = true, type?: \"String\" | \"Int\" | \"Float\" | \"JSON\") => {\n    if(!type) type = undefined;\n    let options = { type, watch };\n    return Mirror.decorator<PropertyParameters, PropertyDecorator>(new PropertyBindDecorator)(options);\n};"]}