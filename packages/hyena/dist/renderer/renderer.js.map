{"version":3,"file":"renderer.js","sourceRoot":"","sources":["../../src/renderer/renderer.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  AttributePart,\n  defaultPartCallback,\n  getValue,\n  noChange,\n  Part,\n  SVGTemplateResult,\n  TemplateInstance,\n  TemplatePart,\n  TemplateResult\n} from \"./core\";\nexport { render } from \"./core\";\n\nexport const html = (strings: TemplateStringsArray, ...values: any[]) =>\n  new TemplateResult(strings, values, \"html\", partCallback);\n\nexport const svg = (strings: TemplateStringsArray, ...values: any[]) =>\n  new SVGTemplateResult(strings, values, \"svg\", partCallback);\n\nexport const partCallback = (\n  instance: TemplateInstance,\n  templatePart: TemplatePart,\n  node: Node\n): Part => {\n  if (templatePart.type === \"attribute\") {\n    const name = templatePart.name!;\n    const prefix = name[0];\n    if (prefix === \".\") {\n      return new PropertyPart(\n        instance,\n        node as Element,\n        name.slice(1),\n        templatePart.strings!\n      );\n    }\n    if (prefix === \"@\") {\n      return new EventPart(instance, node as Element, name.slice(1));\n    }\n    if (prefix === \"?\") {\n      return new BooleanAttributePart(\n        instance,\n        node as Element,\n        name.slice(1),\n        templatePart.strings!\n      );\n    }\n  }\n  return defaultPartCallback(instance, templatePart, node);\n};\n\nexport class BooleanAttributePart extends AttributePart {\n  setValue(values: any[], startIndex: number): void {\n    const s = this.strings;\n    if (s.length === 2 && s[0] === \"\" && s[1] === \"\") {\n      const value = getValue(this, values[startIndex]);\n      if (value === noChange) {\n        return;\n      }\n      if (value) {\n        this.element.setAttribute(this.name, \"\");\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n    } else {\n      throw new Error(\n        \"boolean attributes can only contain a single expression\"\n      );\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {\n  setValue(values: any[], startIndex: number): void {\n    const s = this.strings;\n    let value: any;\n    if (this._equalToPreviousValues(values, startIndex)) {\n      return;\n    }\n    if (s.length === 2 && s[0] === \"\" && s[1] === \"\") {\n      value = getValue(this, values[startIndex]);\n    } else {\n      // Interpolation, so interpolate\n      value = this._interpolate(values, startIndex);\n    }\n    if (value !== noChange) {\n      (this.element as any)[this.name] = value;\n    }\n\n    this._previousValues = values;\n  }\n}\n\nexport class EventPart implements Part {\n  instance: TemplateInstance;\n  element: Element;\n  eventName: string;\n  private _listener: any;\n\n  constructor(instance: TemplateInstance, element: Element, eventName: string) {\n    this.instance = instance;\n    this.element = element;\n    this.eventName = eventName;\n  }\n\n  setValue(value: any): void {\n    const listener = getValue(this, value);\n    if (listener === this._listener) {\n      return;\n    }\n    if (listener == null) {\n      this.element.removeEventListener(this.eventName, this);\n    } else if (this._listener == null) {\n      this.element.addEventListener(this.eventName, this);\n    }\n    this._listener = listener;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this._listener === \"function\") {\n      this._listener.call(this.element, event);\n    } else if (typeof this._listener.handleEvent === \"function\") {\n      this._listener.handleEvent(event);\n    }\n  }\n}\n"]}