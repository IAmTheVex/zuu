{"version":3,"file":"async-append.js","sourceRoot":"","sources":["../../../src/renderer/lib/async-append.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAe,QAAQ,EAAE,MAAM,SAAS,CAAC;AAE3D,MAAM,CAAC,MAAM,WAAW,GAAG,CACzB,KAAuB,EACvB,MAAsC,EACf,EAAE,CACzB,SAAS,CAAC,CAAO,IAAc,EAAE,EAAE;;IACjC,IAAI,KAAK,KAAK,IAAI,CAAC,cAAc,EAAE;QACjC,OAAO;KACR;IACD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IAE5B,IAAI,QAAQ,CAAC;IACb,IAAI,CAAC,GAAG,CAAC,CAAC;;QAEV,KAAoB,IAAA,UAAA,cAAA,KAAK,CAAA,WAAA;YAAd,IAAI,CAAC,wBAAA,CAAA;YACd,IAAI,CAAC,KAAK,CAAC,EAAE;gBACX,IAAI,CAAC,KAAK,EAAE,CAAC;aACd;YAED,IAAI,IAAI,CAAC,cAAc,KAAK,KAAK,EAAE;gBACjC,MAAM;aACP;YAED,IAAI,MAAM,KAAK,SAAS,EAAE;gBACxB,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAClB;YAED,IAAI,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC;YAEnC,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC1B,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;gBAC5C,QAAQ,CAAC,OAAO,GAAG,aAAa,CAAC;gBACjC,IAAI,CAAC,OAAO,CAAC,UAAW,CAAC,YAAY,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;aACpE;YACD,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YACpE,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACrB,CAAC,EAAE,CAAC;SACL;;;;;;;;;AACH,CAAC,CAAA,CAAC,CAAC","sourcesContent":["import { directive, DirectiveFn, NodePart } from \"../core\";\n\nexport const asyncAppend = <T>(\n  value: AsyncIterable<T>,\n  mapper?: (v: T, index?: number) => any\n): DirectiveFn<NodePart> =>\n  directive(async (part: NodePart) => {\n    if (value === part._previousValue) {\n      return;\n    }\n    part._previousValue = value;\n\n    let itemPart;\n    let i = 0;\n\n    for await (let v of value) {\n      if (i === 0) {\n        part.clear();\n      }\n\n      if (part._previousValue !== value) {\n        break;\n      }\n\n      if (mapper !== undefined) {\n        v = mapper(v, i);\n      }\n\n      let itemStartNode = part.startNode;\n\n      if (itemPart !== undefined) {\n        itemStartNode = document.createTextNode(\"\");\n        itemPart.endNode = itemStartNode;\n        part.endNode.parentNode!.insertBefore(itemStartNode, part.endNode);\n      }\n      itemPart = new NodePart(part.instance, itemStartNode, part.endNode);\n      itemPart.setValue(v);\n      i++;\n    }\n  });\n"]}