{"version":3,"file":"shady-render.js","sourceRoot":"","sources":["../../../src/renderer/lib/shady-render.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  removeNodes,\n  Template,\n  templateCaches,\n  TemplateContainer,\n  TemplateInstance,\n  TemplateResult\n} from \"../core\";\n\nimport {\n  insertNodeIntoTemplate,\n  removeNodesFromTemplate\n} from \"./modify-template\";\n\nexport { html, svg, TemplateResult } from \"../core\";\n\ndeclare global {\n  interface Window {\n    ShadyCSS: any;\n  }\n  class ShadowRoot { }\n}\n\nconst getTemplateCacheKey = (type: string, scopeName: string) =>\n  `${type}--${scopeName}`;\n\nconst verifyShadyCSSVersion = () => {\n  if (typeof window.ShadyCSS === \"undefined\") {\n    return false;\n  }\n  if (typeof window.ShadyCSS.prepareTemplateDom === \"undefined\") {\n    console.warn(\n      `Incompatible ShadyCSS version detected.` +\n      `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and` +\n      `@webcomponents/shadycss@1.3.1.`\n    );\n    return false;\n  }\n  return true;\n};\n\nconst shadyTemplateFactory = (scopeName: string) => (\n  result: TemplateResult\n) => {\n  const cacheKey = getTemplateCacheKey(result.type, scopeName);\n  let templateCache = templateCaches.get(cacheKey);\n  if (templateCache === undefined) {\n    templateCache = new Map<TemplateStringsArray, Template>();\n    templateCaches.set(cacheKey, templateCache);\n  }\n  let template = templateCache.get(result.strings);\n  if (template === undefined) {\n    const element = result.getTemplateElement();\n    if (verifyShadyCSSVersion()) {\n      window.ShadyCSS.prepareTemplateDom(element, scopeName);\n    }\n    template = new Template(result, element);\n    templateCache.set(result.strings, template);\n  }\n  return template;\n};\n\nconst TEMPLATE_TYPES = [\"html\", \"svg\"];\n\nfunction removeStylesFromLitTemplates(scopeName: string) {\n  TEMPLATE_TYPES.forEach(type => {\n    const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n    if (templates !== undefined) {\n      templates.forEach(template => {\n        const {\n          element: { content }\n        } = template;\n        // IE 11 doesn't support the iterable param Set constructor\n        const styles = new Set<Element>();\n        Array.from(content.querySelectorAll(\"style\")).forEach((s: Element) => {\n          styles.add(s);\n        });\n        removeNodesFromTemplate(template, styles);\n      });\n    }\n  });\n}\n\nconst shadyRenderSet = new Set<string>();\n\nconst ensureStylesScoped = (\n  fragment: DocumentFragment,\n  template: Template,\n  scopeName: string\n) => {\n  if (!shadyRenderSet.has(scopeName)) {\n    shadyRenderSet.add(scopeName);\n    const styleTemplate = document.createElement(\"template\");\n    Array.from(fragment.querySelectorAll(\"style\")).forEach((s: Element) => {\n      styleTemplate.content.appendChild(s);\n    });\n    window.ShadyCSS.prepareTemplateStyles(styleTemplate, scopeName);\n    removeStylesFromLitTemplates(scopeName);\n    if (window.ShadyCSS.nativeShadow) {\n      const style = styleTemplate.content.querySelector(\"style\");\n      if (style !== null) {\n        fragment.insertBefore(style, fragment.firstChild);\n        insertNodeIntoTemplate(\n          template,\n          style.cloneNode(true),\n          template.element.content.firstChild\n        );\n      }\n    }\n  }\n};\n\nexport function render(\n  result: TemplateResult,\n  container: Element | DocumentFragment,\n  scopeName: string\n) {\n  const templateFactory = shadyTemplateFactory(scopeName);\n  const template = templateFactory(result);\n  let instance = (container as TemplateContainer).__templateInstance;\n\n  if (\n    instance !== undefined &&\n    instance.template === template &&\n    instance._partCallback === result.partCallback\n  ) {\n    instance.update(result.values);\n    return;\n  }\n\n  instance = new TemplateInstance(\n    template,\n    result.partCallback,\n    templateFactory\n  );\n  (container as TemplateContainer).__templateInstance = instance;\n\n  const fragment = instance._clone();\n  instance.update(result.values);\n\n  const host = container instanceof ShadowRoot ? container.host : undefined;\n\n  if (host !== undefined && verifyShadyCSSVersion()) {\n    ensureStylesScoped(fragment, template, scopeName);\n    window.ShadyCSS.styleElement(host);\n  }\n\n  removeNodes(container, container.firstChild);\n  container.appendChild(fragment);\n}\n"]}