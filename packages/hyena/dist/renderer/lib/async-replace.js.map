{"version":3,"file":"async-replace.js","sourceRoot":"","sources":["../../../src/renderer/lib/async-replace.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAe,QAAQ,EAAE,MAAM,SAAS,CAAC;AAE3D,MAAM,CAAC,MAAM,YAAY,GAAG,CAC1B,KAAuB,EACvB,MAAsC,EACf,EAAE,CACzB,SAAS,CAAC,CAAO,IAAc,EAAE,EAAE;;IACjC,IAAI,KAAK,KAAK,IAAI,CAAC,cAAc,EAAE;QACjC,OAAO;KACR;IAED,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IAE3E,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC;IAE/B,IAAI,CAAC,GAAG,CAAC,CAAC;;QAEV,KAAoB,IAAA,UAAA,cAAA,KAAK,CAAA,WAAA;YAAd,IAAI,CAAC,wBAAA,CAAA;YACd,IAAI,CAAC,KAAK,CAAC,EAAE;gBACX,IAAI,CAAC,KAAK,EAAE,CAAC;aACd;YAED,IAAI,IAAI,CAAC,cAAc,KAAK,QAAQ,EAAE;gBACpC,MAAM;aACP;YAED,IAAI,MAAM,KAAK,SAAS,EAAE;gBACxB,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAClB;YAED,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACrB,CAAC,EAAE,CAAC;SACL;;;;;;;;;AACH,CAAC,CAAA,CAAC,CAAC","sourcesContent":["import { directive, DirectiveFn, NodePart } from \"../core\";\n\nexport const asyncReplace = <T>(\n  value: AsyncIterable<T>,\n  mapper?: (v: T, index?: number) => any\n): DirectiveFn<NodePart> =>\n  directive(async (part: NodePart) => {\n    if (value === part._previousValue) {\n      return;\n    }\n\n    const itemPart = new NodePart(part.instance, part.startNode, part.endNode);\n\n    part._previousValue = itemPart;\n\n    let i = 0;\n\n    for await (let v of value) {\n      if (i === 0) {\n        part.clear();\n      }\n\n      if (part._previousValue !== itemPart) {\n        break;\n      }\n\n      if (mapper !== undefined) {\n        v = mapper(v, i);\n      }\n\n      itemPart.setValue(v);\n      i++;\n    }\n  });\n"]}