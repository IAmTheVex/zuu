{"version":3,"file":"modify-template.js","sourceRoot":"","sources":["../../../src/renderer/lib/modify-template.ts"],"names":[],"mappings":"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","sourcesContent":["import { isTemplatePartActive, Template, TemplatePart } from \"../core\";\n\nconst walkerNodeFilter =\n  NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT;\n\nexport function removeNodesFromTemplate(\n  template: Template,\n  nodesToRemove: Set<Node>\n) {\n  const {\n    element: { content },\n    parts\n  } = template;\n  const walker = document.createTreeWalker(\n    content,\n    walkerNodeFilter,\n    null as any,\n    false\n  );\n  let partIndex = 0;\n  let part = parts[0];\n  let nodeIndex = -1;\n  let removeCount = 0;\n  const nodesToRemoveInTemplate = [];\n  let currentRemovingNode: Node | null = null;\n  while (walker.nextNode()) {\n    nodeIndex++;\n    const node = walker.currentNode as Element;\n\n    if (node.previousSibling === currentRemovingNode) {\n      currentRemovingNode = null;\n    }\n\n    if (nodesToRemove.has(node)) {\n      nodesToRemoveInTemplate.push(node);\n\n      if (currentRemovingNode === null) {\n        currentRemovingNode = node;\n      }\n    }\n\n    if (currentRemovingNode !== null) {\n      removeCount++;\n    }\n    while (part !== undefined && part.index === nodeIndex) {\n      part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n      part = parts[++partIndex];\n    }\n  }\n  nodesToRemoveInTemplate.forEach(n => n.parentNode!.removeChild(n));\n}\n\nconst countNodes = (node: Node) => {\n  let count = 1;\n  const walker = document.createTreeWalker(\n    node,\n    walkerNodeFilter,\n    null as any,\n    false\n  );\n  while (walker.nextNode()) {\n    count++;\n  }\n  return count;\n};\n\nconst nextActiveIndexInTemplateParts = (\n  parts: TemplatePart[],\n  startIndex: number = -1\n) => {\n  for (let i = startIndex + 1; i < parts.length; i++) {\n    const part = parts[i];\n    if (isTemplatePartActive(part)) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nexport function insertNodeIntoTemplate(\n  template: Template,\n  node: Node,\n  refNode: Node | null = null\n) {\n  const {\n    element: { content },\n    parts\n  } = template;\n  if (refNode === null || refNode === undefined) {\n    content.appendChild(node);\n    return;\n  }\n  const walker = document.createTreeWalker(\n    content,\n    walkerNodeFilter,\n    null as any,\n    false\n  );\n  let partIndex = nextActiveIndexInTemplateParts(parts);\n  let insertCount = 0;\n  let walkerIndex = -1;\n  while (walker.nextNode()) {\n    walkerIndex++;\n    const walkerNode = walker.currentNode as Element;\n    if (walkerNode === refNode) {\n      refNode.parentNode!.insertBefore(node, refNode);\n      insertCount = countNodes(node);\n    }\n    while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n      if (insertCount > 0) {\n        while (partIndex !== -1) {\n          parts[partIndex].index += insertCount;\n          partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n        return;\n      }\n      partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n    }\n  }\n}\n"]}