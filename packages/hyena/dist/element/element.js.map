{"version":3,"file":"element.js","sourceRoot":"","sources":["../../src/element/element.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,mCAAmC,CAAC;AACjE,OAAO,EAAE,cAAc,EAAW,MAAM,qBAAqB,CAAC;AAC9D,OAAO,EAAE,iBAAiB,EAAc,MAAM,wBAAwB,CAAC;AACvE,OAAO,EAAE,WAAW,EAAc,MAAM,wBAAwB,CAAC;AACjE,OAAO,EAAE,mBAAmB,EAAgB,MAAM,0BAA0B,CAAC;AAC7E,OAAO,EAAE,kBAAkB,EAAe,MAAM,yBAAyB,CAAC;AAC1E,OAAO,EAAE,mBAAmB,EAAgB,MAAM,0BAA0B,CAAC;AAC7E,OAAO,EAAE,WAAW,EAAa,MAAM,uBAAuB,CAAC;AAC/D,OAAO,EAAE,kBAAkB,EAAe,MAAM,yBAAyB,CAAC;AAE1E,MAAM,mBAA6B,SAAQ,WAAW;IAElD,sCAAsC;IAEtC;QACI,KAAK,EAAE,CAAC;QAJF,eAAU,GAAY,KAAK,CAAC;IAKtC,CAAC;IAIM,KAAK,CAAoB,QAAgB;QAC5C,IAAG,IAAI,CAAC,UAAU;YAAE,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAI,QAAQ,CAAC,CAAC;;YACjE,OAAO,IAAI,CAAC,aAAa,CAAI,QAAQ,CAAC,CAAC;IAChD,CAAC;IAEO,qBAAqB;QACzB,IAAG,WAAW,CAAC,IAAI,CAAC,EAAE;YAClB,IAAG,mBAAmB,CAAC,IAAI,CAAC,EAAE;gBACL,IAAM,CAAC,YAAY,EAAE,CAAC;aAC9C;YACkB,IAAM,CAAC,MAAM,EAAE,CAAC;YACnC,IAAG,kBAAkB,CAAC,IAAI,CAAC,EAAE;gBACL,IAAM,CAAC,WAAW,EAAE,CAAC;aAC5C;SACJ;IACL,CAAC;IAEO,wBAAwB;QAC5B,IAAG,mBAAmB,CAAC,IAAI,CAAC,EAAE;YACL,IAAM,CAAC,YAAY,EAAE,CAAC;SAC9C;QAED,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAG,WAAW,CAAC,IAAI,CAAC,EAAE;YAClB,KAAK,GAAqB,IAAM,CAAC,OAAO,EAAE,CAAC;SAC9C;QAED,IAAI,OAAO,GAAG,IAAI,CAAA;cACZ,KAAK;cACL,IAAI,CAAC,MAAM,EAAE;SAClB,CAAC;QAEF,IAAG,IAAI,CAAC,UAAU,EAAE;YAChB,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;SACpC;aAAM;YACH,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;SACzB;QAED,IAAG,kBAAkB,CAAC,IAAI,CAAC,EAAE;YACL,IAAM,CAAC,WAAW,EAAE,CAAC;SAC5C;IACL,CAAC;IAED,iBAAiB;QACb,IAAG,IAAI,CAAC,UAAU,EAAE;YAChB,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;SACvC;QAED,IAAG,cAAc,CAAC,IAAI,CAAC,EAAE;YACL,IAAM,CAAC,OAAO,EAAE,CAAC;SACpC;QAED,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,wBAAwB,EAAE,CAAC;IACpC,CAAC;IAED,oBAAoB;QAChB,IAAG,iBAAiB,CAAC,IAAI,CAAC,EAAE;YACL,IAAM,CAAC,UAAU,EAAE,CAAC;SAC1C;IACL,CAAC;IAED,wBAAwB,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ;QAC7C,IAAI,GAAG,GAAW,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,UAAU,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;QACrG,IAAI,IAAI,GAAQ,IAAI,CAAC;QACrB,IAAG,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,UAAU,EAAE;YACpB,IAAI,CAAC,GAAG,CAAE,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;SACxD;QACD,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,wBAAwB,EAAE,CAAC;IACpC,CAAC;CACJ;AAAA,CAAC","sourcesContent":["import { TemplateResult } from \"../renderer/core\";\nimport { render, html } from '../renderer/lib/renderer-extended';\nimport { isOnMountValid, OnMount } from './contracts/OnMount';\nimport { isOnDismountValid, OnDismount } from './contracts/OnDismount';\nimport { isUpdatable, Updateable } from './contracts/Updateable';\nimport { isOnWillUpdateValid, OnWillUpdate } from './contracts/OnWillUpdate';\nimport { isOnDidUpdateValid, OnDidUpdate } from './contracts/OnDidUpdate';\nimport { isOnWillRenderValid, OnWillRender } from \"./contracts/OnWillRender\";\nimport { isStyleable, Styleable } from \"./contracts/Styleable\";\nimport { isOnDidRenderValid, OnDidRender } from './contracts/OnDidRender';\n\nexport abstract class HyenaElement extends HTMLElement {\n    protected shadowable: boolean = false;\n    // protected me: { new (...args): T };\n\n    public constructor() {\n        super();\n    }\n\n    public abstract render(): TemplateResult;\n\n    public query<T extends Element>(selector: string): T {\n        if(this.shadowable) return this.shadowRoot.querySelector<T>(selector);\n        else return this.querySelector<T>(selector);\n    }\n\n    private triggerUpdatePipeline() {\n        if(isUpdatable(this)) {\n            if(isOnWillUpdateValid(this)) {\n                (<OnWillUpdate>(<any>this)).onWillUpdate();\n            }\n            (<Updateable>(<any>this)).update();\n            if(isOnDidUpdateValid(this)) {\n                (<OnDidUpdate>(<any>this)).onDidUpdate();\n            }\n        }   \n    }\n\n    private triggerRenderingPipeline() {\n        if(isOnWillRenderValid(this)) {\n            (<OnWillRender>(<any>this)).onWillRender();\n        }\n\n        let style = null;\n        if(isStyleable(this)) {\n            style = (<Styleable>(<any>this)).styling();\n        }\n\n        let content = html`\n            ${style}\n            ${this.render()}\n        `;\n\n        if(this.shadowable) {\n            render(content, this.shadowRoot);\n        } else {\n            render(content, this);\n        }\n\n        if(isOnDidRenderValid(this)) {\n            (<OnDidRender>(<any>this)).onDidRender();\n        }\n    }\n\n    connectedCallback() {\n        if(this.shadowable) {\n            this.attachShadow({ mode: \"open\" });\n        }\n\n        if(isOnMountValid(this)) {\n            (<OnMount>(<any>this)).onMount();\n        }\n\n        this.triggerUpdatePipeline();\n        this.triggerRenderingPipeline();\n    }\n\n    disconnectedCallback() {\n        if(isOnDismountValid(this)) {\n            (<OnDismount>(<any>this)).onDismount();\n        }\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n        let key: string = name.replace(/-([a-z])/g, function (g) { return g[1].toUpperCase(); }) + \"Changed\";\n        let self = <any>this;\n        if(typeof self[key] == 'function') {\n            (<Function>self[key]).call(this, oldValue, newValue);\n        }\n        this.triggerUpdatePipeline();\n        this.triggerRenderingPipeline();\n    }\n};"]}